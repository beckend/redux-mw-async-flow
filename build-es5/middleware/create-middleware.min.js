Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var cloneDeep=require("lodash.clonedeep");var lGet=require("lodash.get");var merge=require("lodash.merge");var lSet=require("lodash.set");var Observable_1=require("rxjs/Observable");exports.Observable=Observable_1.Observable;var Subject_1=require("rxjs/Subject");exports.Subject=Subject_1.Subject;var async_types_1=require("../async-types");var promise_factory_1=require("../promise-factory");var request_store_1=require("../request-store");
var date_1=require("./date");var default_options_1=require("./default-options");var middleware_observers_1=require("./middleware-observers");var uniqueid=require("uniqueid");var getGenerateId=function(){var asyncUniqueId=uniqueid(null,"-@@ASYNC_FLOW");return function(_a){var action=_a.action;return asyncUniqueId()+"--"+action.type}};
exports.createAsyncFlowMiddleware=function(opts){if(opts===void 0)opts={metaKey:default_options_1.defaultOpts.metaKey,timeout:default_options_1.defaultOpts.timeout};var _a=async_types_1.getAsyncTypeConstants({types:opts.asyncTypes}),REQUEST=_a.REQUEST,PENDING=_a.PENDING,FULFILLED=_a.FULFILLED,REJECTED=_a.REJECTED,ABORTED=_a.ABORTED,END=_a.END;var mwObservers=middleware_observers_1.createObservers({asyncTypes:{END:END,REQUEST:REQUEST}});var _b=tslib_1.__assign({},default_options_1.defaultOpts,opts),
generateIdMerged=_b.generateId,metaKey=_b.metaKey,metaKeyRequestID=_b.metaKeyRequestID,timeout=_b.timeout;var generateId=generateIdMerged||getGenerateId();var requestStore=new request_store_1.RequestStore;var middleware=function(){return function(next){return function(action){var dispatchNormal=function(){return next(action)};var dispatchAsyncFlow=function(actionArg){mwObservers.before.rootSubject.next(actionArg);var dispatchResult=next(actionArg);mwObservers.after.rootSubject.next(dispatchResult)};
var actionType=action.type;if(!actionType||lGet(action,["meta",metaKey,"enable"])===false)return dispatchNormal();var metaRequestIdPath=["meta",metaKey,metaKeyRequestID];var metaPromisePath=["meta",metaKey,"promise"];var handleEndAction=function(suffixType,resolve,payloadArg){var requestID=lGet(action,metaRequestIdPath);var theAsyncFlowPromise=lGet(action,metaPromisePath);if(!requestID||!theAsyncFlowPromise)return dispatchNormal();else dispatchAsyncFlow(action);if(requestID){if(resolve)requestStore.resolve(requestID,
payloadArg||action.payload);else requestStore.reject(requestID,payloadArg||action.payload);var actionEnd=merge({},action,{meta:(_a={},_a[metaKey]={endActionType:actionType,timeEnd:date_1.newDate()},_a),type:async_types_1.replaceSuffix(actionType,suffixType,END)});dispatchAsyncFlow(actionEnd)}else console.warn(action.type+" - meta data not found, did you forget to send it?");var _a};if(actionType.endsWith(REQUEST)){var actionClone=cloneDeep(action);var requestID_1=lGet(actionClone,metaRequestIdPath);
if(!requestID_1||{}.hasOwnProperty.call(requestStore,requestID_1)){do requestID_1=generateId({action:actionClone});while({}.hasOwnProperty.call(requestStore,requestID_1));lSet(actionClone,metaRequestIdPath,requestID_1)}var metaTimeoutKey=lGet(actionClone,["meta",metaKey,"timeoutRequest"]);var timeoutRequest=metaTimeoutKey||timeout;var _a=promise_factory_1.createPromise(),promise=_a.promise,reject_1=_a.reject,resolve=_a.resolve;promise.timeout(timeoutRequest,"timeout").catch(function(er){reject_1(er)}).finally(function(){requestStore.delete(requestID_1)});
var tmpRequestStoreAddPayload=(_b={},_b[request_store_1.REQUEST_KEY_PROMISE]=promise,_b[request_store_1.REQUEST_KEY_RESOLVEFN]=resolve,_b[request_store_1.REQUEST_KEY_REJECTFN]=reject_1,_b);requestStore.add(requestID_1,tmpRequestStoreAddPayload);var addedActionMetaData={meta:(_c={},_c[metaKey]={endActionType:null,promise:promise,timeEnd:null,timeStart:date_1.newDate(),timeout:timeout,timeoutRequest:timeoutRequest},_c)};var pendingAction=merge({},actionClone,{type:async_types_1.replaceSuffix(actionType,
REQUEST,PENDING)},addedActionMetaData);dispatchAsyncFlow(pendingAction);var newAction=merge({},actionClone,addedActionMetaData);dispatchAsyncFlow(newAction);return}else if(actionType.endsWith(FULFILLED))handleEndAction(FULFILLED,true);else if(actionType.endsWith(REJECTED))handleEndAction(REJECTED,false);else if(actionType.endsWith(ABORTED))handleEndAction(ABORTED,false);else return dispatchNormal();var _b,_c}}};return{middleware:middleware,observers:{after:{obsOnAll:mwObservers.after.obsOnAll,obsOnEnd:mwObservers.after.obsOnEnd,
obsOnRequest:mwObservers.after.obsOnRequest},before:{obsOnAll:mwObservers.before.obsOnAll,obsOnEnd:mwObservers.before.obsOnEnd,obsOnRequest:mwObservers.before.obsOnRequest}}}};